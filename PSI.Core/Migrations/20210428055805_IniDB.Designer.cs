// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PSI.Core.Infrastructure.DBContext;

namespace PSI.Core.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210428055805_IniDB")]
    partial class IniDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PSI.Core.Entities.PurchaseWeightNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ActualPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("CarNo")
                        .HasColumnType("text");

                    b.Property<float>("CarWeight")
                        .HasColumnType("real");

                    b.Property<DateTime>("CarWeightTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<string>("DefectiveReason")
                        .HasColumnType("text");

                    b.Property<float>("DefectiveWeight")
                        .HasColumnType("real");

                    b.Property<DateTime>("EffectiveTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExcavatorOpEmpNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExcavatorOpTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FacNo")
                        .HasColumnType("text");

                    b.Property<float>("FinalDefectiveWeight")
                        .HasColumnType("real");

                    b.Property<float>("FullWeight")
                        .HasColumnType("real");

                    b.Property<DateTime>("FullWeightTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("HasTax")
                        .HasColumnType("boolean");

                    b.Property<string>("Ingredient")
                        .HasColumnType("text");

                    b.Property<string>("InputType")
                        .HasColumnType("text");

                    b.Property<string>("NoteStatus")
                        .HasColumnType("text");

                    b.Property<string>("PayType")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("ScaleNo")
                        .HasColumnType("text");

                    b.Property<string>("SettleType")
                        .HasColumnType("text");

                    b.Property<decimal>("ThirdWeightFee")
                        .HasColumnType("numeric");

                    b.Property<float>("TradeWeight")
                        .HasColumnType("real");

                    b.Property<decimal>("TraficFee")
                        .HasColumnType("numeric");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WantPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("PurchaseWeightNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
