var CreateWeightNotePageClass = /** @class */ (function () {
    function CreateWeightNotePageClass(baseUrl) {
        if (baseUrl === void 0) { baseUrl = ""; }
        this.BaseUrl = baseUrl;
    }
    CreateWeightNotePageClass.prototype.IniPageEvent = function () {
        // Page Field
        var fullWeight = $('#VE_PurchaseWeightNote_FullWeightTime').get(0);
        var defectiveWeight = $('#VE_PurchaseWeightNote_DefectiveWeight').get(0);
        var unitPrice = $('#VE_PurchaseWeightNote_UnitPrice').get(0);
        var traficUnitPrice = $('#VE_PurchaseWeightNote_TraficUnitPrice').get(0);
        var weightFee = $('#VE_PurchaseWeightNote_ThirdWeightFee').get(0);
        var ishasTaxList = $(".ishas_tax").get();
        // Logic        
        //fullWeight.addEventListener('keyup', this.CaculateAllFee);
        //defectiveWeight.addEventListener('keyup', this.CaculateAllFee);
        //unitPrice.addEventListener('keyup', this.CaculateAllFee);
        //traficUnitPrice.addEventListener('keyup', this.CaculateAllFee);
        //weightFee.addEventListener('keyup', this.CaculateAllFee);
        //ishasTaxList.forEach((item) => item.addEventListener('change', this.CaculateAllFee));
    };
    ;
    CreateWeightNotePageClass.prototype.ReSetCarNoItems = function (carNoIdObj, dataObjLs) {
        carNoIdObj.html(''); // 選項清空
        var defaultOption = new Option("0.新車牌", "0", false, false);
        carNoIdObj.append(defaultOption);
        dataObjLs.forEach(function (item) {
            var newOption = new Option(item.carName, item.id, false, false);
            carNoIdObj.append(newOption);
        });
    };
    CreateWeightNotePageClass.prototype.ShowList = function () {
        // 傳入結果 根據結果檢查是否為新增不為新增的則Pass，不再保留清單的則移除
        var _this = this;
        //let userSelect = ($('.select2bs4').find(':selected').get() as HTMLSelectElement[]);
        // User畫面所選
        var userSelect = $('.select2bs4').find(':selected').toArray();
        // 準備要Show
        var showList = $('#evenProductLs li').toArray().concat($('#oddProductLs li').toArray());
        // 要新增的就新增
        userSelect.filter(function (item) {
            return showList.map(function (litag) { return litag.dataset.value; }).indexOf(item.value) === -1;
        }).forEach(function (item) { return _this.AppendToShowList(item); });
        // 要刪除的就刪除    
        showList.filter(function (litag) {
            return userSelect.map(function (item) { return item.value; }).indexOf(litag.dataset.value) === -1;
        }).forEach(function (item) { return item.remove(); });
    };
    CreateWeightNotePageClass.prototype.ShowList2 = function (userSelectedVals, evenProductLiTagLs, oddProductLiTagLs) {
        // 傳入結果 根據結果檢查是否為新增不為新增的則Pass，不再保留清單的則移除
        // User畫面所選
        var userSelect = $('.select2bs4').find(':selected').toArray();
        var userSelect2 = $('.select2bs4').find(':selected').toArray()
            .map(function (item) { return item.value; });
        // 差集
        // 要新增的就新增
        //userSelect.filter(item => {
        //    return showList.map(litag => litag.dataset.value).indexOf(item.value) === -1;
        //}).forEach((item) => this.AppendToShowList(item));
        console.log(userSelect2);
    };
    CreateWeightNotePageClass.prototype.GetShowProdItemIds = function (testPostObj) {
        var shoList = testPostObj.find('input').toArray();
        if (shoList) {
            var abc2 = shoList.filter(function (item, index) {
                return item.name.includes("ProductId");
            }).map(function (item) { return item.value; });
            //let abc = shoList.map((item, index) => {
            //    return (item.name.querySelector(`input[name="VE_PurchaseIngredientLs[${index}].ProductId"`) as HTMLInputElement).value;
            //})
            return abc2;
        }
    };
    CreateWeightNotePageClass.prototype.AppendToShowList = function (prodItem) {
        var allShowList = $("#evenProductLs li").toArray().concat($("#oddProductLs li").toArray());
        var iMinusTag = document.createElement("i");
        iMinusTag.classList.add("fas");
        iMinusTag.classList.add("fa-minus-circle");
        iMinusTag.style.cursor = "pointer";
        iMinusTag.style.color = "blue";
        var iPlusTag = document.createElement("i");
        iPlusTag.classList.add("fas");
        iPlusTag.classList.add("fa-plus-circle");
        iPlusTag.style.cursor = "pointer";
        iPlusTag.style.color = "red";
        var spanTag = document.createElement("span");
        var liTag = document.createElement("li");
        liTag.dataset.text = prodItem.textContent;
        liTag.textContent = prodItem.textContent + " \u00A0\u00A0";
        liTag.dataset.value = prodItem.value.toString();
        liTag.dataset.percent = allShowList.length === 0 ? "90" : "10";
        liTag.appendChild(iMinusTag);
        liTag.appendChild(spanTag);
        liTag.appendChild(iPlusTag);
        //AddHidden(liTag, index);
        // Action    
        var showList = allShowList.length % 2 === 0 ?
            document.getElementById("evenProductLs") :
            document.getElementById("oddProductLs");
        showList === null || showList === void 0 ? void 0 : showList.appendChild(liTag);
        var allShowList2 = $("#evenProductLs li").toArray().concat($("#oddProductLs li").toArray());
        allShowList2.forEach(function (item, index) {
            Array.from(item.getElementsByTagName('input')).forEach(function (subItem) {
                subItem.remove();
            });
            // AddHidden(item as HTMLLIElement, index);
        });
        //Event
        var thisObj = this;
        iMinusTag.addEventListener('click', function () {
            var nowLITag = this.parentElement;
            thisObj.CaculatePercent(nowLITag, false);
            thisObj.RefreshProdItemPercent();
            thisObj.ShowTotalInfo();
            thisObj.SetBindingValue();
            var allShowList3 = $("#evenProductLs li").toArray().concat($("#oddProductLs li").toArray());
            allShowList3.forEach(function (item, index) {
                Array.from(item.getElementsByTagName('input')).forEach(function (subItem) {
                    subItem.remove();
                });
                thisObj.AddHidden(item, index);
            });
        });
        iPlusTag.addEventListener('click', function () {
            var nowLITag = this.parentElement;
            thisObj.CaculatePercent(nowLITag, true);
            thisObj.RefreshProdItemPercent();
            thisObj.ShowTotalInfo();
            thisObj.SetBindingValue();
            var allShowList4 = $("#evenProductLs li").toArray().concat($("#oddProductLs li").toArray());
            allShowList4.forEach(function (item, index) {
                Array.from(item.getElementsByTagName('input')).forEach(function (subItem) {
                    subItem.remove();
                });
                thisObj.AddHidden(item, index);
            });
        });
    };
    ;
    CreateWeightNotePageClass.prototype.AppendToShowList2 = function (prodItem) {
    };
    ;
    CreateWeightNotePageClass.prototype.RefreshProdItemPercent = function () {
        var allProdItems = $('#evenProductLs li').toArray().concat($('#oddProductLs li').toArray());
        allProdItems.forEach(function (item) {
            var spanTag = item.querySelector("span");
            spanTag.innerHTML = "\u00A0\u00A0" + item.dataset.percent + "%\u00A0\u00A0";
        });
    };
    CreateWeightNotePageClass.prototype.AddHidden = function (theLi, index) {
        // Create a hidden input element, and append it to the li:
        var nameProperty = document.createElement("input");
        nameProperty.className = "modelbind";
        nameProperty.type = "hidden";
        nameProperty.name = "VE_PurchaseIngredientLs[" + index + "].ItemName";
        nameProperty.value = theLi.dataset.text;
        var valueProperty = document.createElement("input");
        nameProperty.className = "modelbind";
        valueProperty.type = "hidden";
        valueProperty.name = "VE_PurchaseIngredientLs[" + index + "].ProductId";
        valueProperty.value = theLi.dataset.value;
        var percentProperty = document.createElement("input");
        nameProperty.className = "modelbind";
        percentProperty.type = "hidden";
        percentProperty.name = "VE_PurchaseIngredientLs[" + index + "].ItemPercent";
        percentProperty.value = theLi.dataset.percent;
        theLi.appendChild(nameProperty);
        theLi.appendChild(valueProperty);
        theLi.appendChild(percentProperty);
    };
    CreateWeightNotePageClass.prototype.ShowTotalInfo = function () {
        var _a;
        var allProdItems = $('#evenProductLs li').toArray().concat($('#oddProductLs li').toArray());
        var allPercent = 0;
        var maxItem;
        allProdItems.forEach(function (item) {
            allPercent = +item.dataset.percent + allPercent;
            if (!maxItem) {
                maxItem = item;
            }
            else {
                maxItem = +maxItem.dataset.percent > +item.dataset.percent ? maxItem : item;
            }
        });
        var totalInfo = document.getElementById("total");
        totalInfo.querySelectorAll("span").forEach(function (item) { item.remove(); });
        var itemSpan = document.createElement("span");
        itemSpan.innerHTML = "\uFF0C\u5DF2\u9078" + allProdItems.length + "\u9805";
        var percentSpan = document.createElement("span");
        percentSpan.innerHTML = "\uFF0C\u6BD4\u4F8B\u52A0\u7E3D:" + allPercent + "%";
        if (allPercent > 100)
            percentSpan.style.color = "red";
        var recognitionSpan = document.createElement("span");
        //let haha = document.querySelector('.select2bs4 :checked') as HTMLOptionElement;
        //alert(haha.value);
        //let recognitionText = ($('.select2bs4').find(':selected').toArray() as HTMLSelectElement[])
        //    .filter(item => { return item.value === maxItem.dataset.value; })[0]?.textContent ?? "無";
        recognitionSpan.innerHTML = "\u8A8D\u5217\u9805\u76EE : " + ((_a = maxItem === null || maxItem === void 0 ? void 0 : maxItem.dataset.text) !== null && _a !== void 0 ? _a : "無");
        totalInfo.appendChild(recognitionSpan);
        totalInfo.appendChild(itemSpan);
        totalInfo.appendChild(percentSpan);
        if (allProdItems.length > 0)
            $('#IsPassPurchase').val("true");
        else
            $('#IsPassPurchase').val("false");
    };
    CreateWeightNotePageClass.prototype.SetBindingValue = function () {
        var allProdItems = $('#evenProductLs li').toArray().concat($('#oddProductLs li').toArray());
        var purchaseDetailInfos = [];
        allProdItems.forEach(function (item) {
            var purchaseDetailInfo = new PurchaseDetailInfo2();
            purchaseDetailInfo.Value = item.dataset.value;
            purchaseDetailInfo.Name = item.textContent;
            purchaseDetailInfo.Percent = parseInt(item.dataset.percent, 10);
            purchaseDetailInfos.push(purchaseDetailInfo);
        });
        if (purchaseDetailInfos.length === 0)
            $('#SelectPurchaseDetailInfos').val(null);
        else {
            $('#SelectPurchaseDetailInfos').val(JSON.stringify(purchaseDetailInfos));
        }
    };
    CreateWeightNotePageClass.prototype.CaculatePercent = function (curProdItem, isPlus) {
        var curVal = curProdItem.dataset.percent;
        var newVal = isPlus ? +curVal + 10 : +curVal - 10;
        if (newVal > 100)
            newVal = 100;
        if (newVal < 0)
            newVal = 0;
        curProdItem.dataset.percent = newVal.toString();
        //var el = document.getElementById("outside");
        //el.addEventListener("click", modifyText, false);
    };
    return CreateWeightNotePageClass;
}());
;
var PurchaseDetailInfo2 = /** @class */ (function () {
    function PurchaseDetailInfo2() {
    }
    return PurchaseDetailInfo2;
}());
//# sourceMappingURL=data:application/json;base64,